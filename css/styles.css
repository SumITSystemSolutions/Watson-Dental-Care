/* * using the import directive we are importing the normalize stylesheet into our stylesheet */
@import "./normalize.css";

:root {
    /* * defining the colors we are going to be using on the site */
    --primary-color: #2584ff;
    --secondary-color: #00d9ff;
    --accent-color: #ff3400;
    --header-color: #1b0760;
    --body-text-color: #918ca4;
    --body-text-color-darker: #5c5577;
    --border-color: #ccc;
    --border-radius: 30px;
}

*, *::after, *::before{
    box-sizing: border-box;
}

/* * Typography */
::selection {
    background: var(--primary-color);
    color: white;
}

html {
    font-size: 62.5%;
}

body {
    font-family: 'Inter', Arial, Helvetica, sans-serif;
    color: var(--body-text-color);
    font-size: 2.4rem;
    /* * remember that this is 1.5 * the font size since we are not using a measurement unit */
    line-height: 1.5;
}

h1, h2, h3 {
    color: var(--header-color);
    margin-bottom: 1rem;
    line-height: 1.1;
}

h1 {
    font-size: 7rem;
}

h2 {
    font-size: 4rem;
}

h3 {
    font-size: 3rem;
    font-weight: 500;
}

p {
    margin: 0;
}

/* * Desktop view */
@media screen and (mid-width:1024px) {
    body {
        font-size: 1.8rem;
    }

    h1 {
        font-size: 8rem;
    }
    
    h2 {
        font-size: 4rem;
    }
    
    h3 {
        font-size: 2.4rem;
    }  
}

/* * Links */
a {
    text-decoration: none;
}

.link-arrow {
    color: var(--accent-color);
    display: inline-block;
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
    margin-top: 1.5rem;
}

/* * to create the arrow we use the content property to add it after */
/* * if this didn't work we would have used a icon */
.link-arrow::after{
    content: '-->';
    margin-left: 5px;
    transition:margin-left ease-out 0.7s;
}

/* TODO when we hover over the link we want the arrow to move to the right */
/* * to target the arrow we need to put the after psuedo class after the :hover */
.link-arrow:hover::after {
    margin-left: 10px;
}

@media screen and (min-width:1024px) {
    .link-arrow {
        font-size: 1.5rem;
    }
}

/* TODO Build a badge component */
/* * Badges */
.badge {
    border-radius: 20px;
    font-size: 2rem;
    font-weight: 600;
    padding: .5rem 2rem;
    /* * This is going to stop the badge from wraping on to a new line */
    white-space: nowrap;
}

/* * using BEM naming convention to define the skin  */
.badge--primary{
    background: var(--primary-color);
    color: white;
}

.badge--secondary{
    background: var(--secondary-color);
    color: white;
}


.badge--small {
    font-size: 1.6rem;
    padding: 0.5rem 1.5rem;
}

@media screen and (min-width:1024px) {
    .badge{
        font-size: 1.5rem;
    }

    .badge--small {
        font-size: 1.2rem;
    }
}

/* TODO Build a list component */
/* * Lists */

.list {
    list-style: none;
    padding-left: 0;
    
}

/* * using the BEM naming convetion the child class gets the __ because it is apart of another component  */
.list--inline .list__item{
    /* * remember that we can apply margin to inline-block not inline */
    display: inline-block;
    margin-right: 2rem;
}

.list--tick {
    /* * we have to add this padding to get the image to show  */
    padding-left: 3rem;
    list-style-image: url(../images/tick.svg);
    color: var(--header-color);   
}

/* * to add space between the ticks and the items we have to nest right here because if we didn't it would apply this rule to every list__item class */
.list--tick .list__item {
    padding-left: 0.5rem;
    margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
    .list--tick .list__item {
        padding-left: 0;
    } 
}

/* TODO Work on the Icons*/
/* * Icons */

/* * setting the width and height of the icon */
.icon {
    width: 40px;
    height: 40px;
}

.icon--small {
    width: 30px;
    height: 30px;
}

/* * primary icon color */
.icon--primary {
    /* * the fill property only works on svg images this is how we change the color */
    fill: var(--primary-color); 
}

.icon--white {
    /* * the fill property only works on svg images this is how we change the color */
    fill: #fff; 
}


.icon-container {
    background: #f3f9fa;
    width: 64px;
    height: 64px;
    border-radius: 100%;
    /* * we are aligning the svg in the center of the circle */
    display: inline-flex;
    justify-content: center;
    align-items: center;
}

.icon-container--accent {
    background: var(--accent-color);
}

/* TODO Build buttons*/
/* * Buttons */


.btn {
    border-radius: 40px;
    border: 0;
    cursor: pointer;
    font-size: 1.7rem;
    font-weight: 600;
    margin: 1rem 0;
    outline: 0;
    padding: 2rem 4vw;
    text-transform: uppercase;
    text-align: center;
    white-space: nowrap;
}

.btn .icon {
    width: 2rem;
    height: 2rem;
    margin-right: 1rem;
    /* * this is going to align the icon to the middle of the button for us */
    vertical-align: middle;
}

.btn--primary {
    background: var(--primary-color);
    color: #fff; 
}

.btn--primary:hover {
    background: #3a8ffd;
}

.btn--secondary {
    background: var(--secondary-color);
    color: #fff;
}

.btn--secondary:hover{
    background: #00c8eb;
}

.btn--accent {
    background-color: var(--accent-color);
    color: #fff;
}

.btn--accent:hover {
    background: #ec3000;
}

.btn--outline {
    background-color: white;
    color: var(--header-color);
    border: 2px solid var(--header-color);
    transition: background ease-out 0.9s;
}

.btn--outline:hover {
    background: var(--header-color);
    color: #fff;
}

.btn--stretched {
    padding-left: 6rem;
    padding-right: 6rem;
}

.btn--block{
    width: 100%;
    display: inline-block;
}

@media screen and (min-width: 1024px) {
    .btn {
        font-size: 1.5rem;
    }
}

/* TODO working on the inputs*/
/* * Inputs */

.input {
    padding:1.5rem 3.5rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    outline: 0;
    color: var(--header-color);
    font-size: 2rem;
}

/* * psuedo selector for placeholders */
::placeholder {
    color:#cdcbd7 ;
}

.input--group {
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    display: flex;
}

/* * using nesting to target this specific input field */
.input--group .input {
    border: 0;
    /* * this is going to make the input field grow to take up all of the available space in the div  */
    flex-grow: 1;
    padding: 1.5rem 2rem;
    width: 0;
}

.input--group .btn{
    margin: 4px;
}

@media screen and (min-width: 1024px){
    .input {
        font-size: 1.5rem;
    }
}

 /* TODO working on the Card*/
/* * card */

.card {
    border-radius: 7px;
    box-shadow: 0 0 20px 10px #f3f3f3;
    /* * the hidden property is applied because the background volor gets rid of the rounded corners */
    overflow: hidden;
}

.card__header, .card__body {
    padding: 2rem 3rem;
}

.card--primary .card__header{
    background: var(--primary-color);
    color: white;
}

.card--secondary .card__header{
    background: var(--secondary-color);
    color: white;
}

.card--primary .plan__description {
    opacity: 0.8;
}

.card--primary .badge--primary {
    background: #126de4;
    text-transform: uppercase;
}
.card--secondary .badge--secondary {
    background: #02cdf1;
    text-transform: uppercase;
}


/* * Plans */

.plan {
    transition: transform .7s ease;
}

.plan__name{
    color: white;
    margin: 0;
    font-weight: 500;
    font-size: 2.4rem;
}

.plan__price {
    font-size: 6rem;
}

.plan__billing-cycle {
    font-size: 2.4rem;
    font-weight: 300;
    opacity: 0.8;
    margin-right: 1rem;
}

.plan__description {
    font-size: 2rem;
    font-weight: 300;
    letter-spacing: 1px;
    display: block;
}

.plan .list__item {
    letter-spacing: 1px;
    margin-bottom: 3rem;
}


.plan--popular .card__header{
    /* * in order to use absolute posiition the parent must be relative */
    position: relative;
}

.plan--popular .card__header::before {
    /* * remeber that this is a inline element */
    content: url(../images/popular.svg);
    /* * this is an inline element so we have to change the display to give it a width */
    display: inline-block;
    width: 40px;
    position: absolute;
    top: -6px;
    right: 5%;
}

.plan:hover {
    transform: scale(1.05);
}

.plan--popular:hover {
    transform: scale(1.05);
}

@media screen and (mid-width: 1024px) {
    .plan__name {
        font-size: 1.4rem;
    }

    .plan__price {
        font-size: 5rem;
    }

    .plan--popular {
        transform: scale(1.1);
    }
    .plan--popular:hover {
        transform: scale(1.15);
    }

    .plan__billing-cycle {
        font-size: 1.6rem;
    }

    .plan__description {
        font-size: 1.7rem;
    }
}

/* * media*/

.media {
    display: flex;
    margin-bottom: 5rem;
}

.media__title {
    margin-top: 0;
}

.media__body {
    margin: 0 2rem;
}

.media__image {
    margin-top: 1rem;
}

/* * quotes */

.quote {
    font-size: 3rem;
    font-family: "Inter", Arial, Helvetica, sans-serif;
    font-style: italic;
    color: var(--body-text-color-darker);
    line-height: 1.3;
}

.quote__text::before {
    /* * this is a predetermined value in css */
    content: open-quote;
}

.quote__text::after {
    content: close-quote;
}

.quote__author {
    font-size: 3rem;
    font-weight: 500;
    font-style: normal;
    margin-top: 2rem;
    margin-bottom: 0;
    font-family: 'Montserrat', Arial, Helvetica, sans-serif;
}

.company {
    font-style: normal;
    font-size: 2rem;
    opacity: .4;
}

.quote__line {
    position: relative;
    top: 8px;
}

@media screen and (mid-width: 1024px) {
    .quote {
        
        font-size: 2rem;
    }


    .quote__author {
        font-size: 2.4rem;
    }

    .company {
        font-size: 1.6rem;
    }
}

/* * grids */

.grid {
    display: grid;
}

@media screen and (min-width: 768px) {
    .grid--1x2 {
        grid-template-columns: 1fr 1fr;
    }
}

@media screen and (min-width: 1024px) {
    .grid--1x3 {
        grid-template-columns: 1fr 1fr 1fr;
    }
}

/* testimonials */

.testimonial {
    padding: 3rem;
}

.testimonial__image {
    position: relative;
}

.testimonial__image > .icon-container {
    position: absolute;
    top: 3rem;
    right: -32px;
}

/* * we are directly affecting the img element inside of the element with this class */
/* * this is the direct child selector  */
.testimonial__image > img {
    width: 100%;
}

.testimonial .grid {
    padding: 1.2rem;
}

@media screen and (min-width: 768px) {
    .testimonial .quote,
    .testimonial .quote__author {
        font-size: 2.4rem;
    }

    .testimonial .quote {
        margin-left: 6rem;
    }
}

/* * callouts */

.callout {
    padding: 4rem;
    border-radius: 5px;
}

.callout--primary {
    background: var(--primary-color);
    color: #fff;
}

.callout__heading{
    color: #fff;
    margin-top: 0;
    font-size: 3rem;
}

.callout .btn {
    /* * this is a property that we apply to a grid item this is going to fix it from streching */
    justify-self: center;
    align-self: center;
}

.callout__content {
    text-align: center;
}

@media screen and (min-width: 768px) {

    .callout .grid--1x2 {
        grid-template-columns: 1fr auto;
    }

    .callout__content {
        text-align: left;
    }

    .callout .btn {
        justify-self: start;
        margin: 0 2rem;
    }
}

/* * collapsibles */

.collapsible__header {
    display: flex;
    justify-content: space-between;
}

.collapsible__heading {
    margin-top: 0;
    font-size: 3rem;
}

.collapsible__chevron {
    transform: rotate(-90deg);
    transition: transform 0.3s;
}

.collapsible__content {
    /* * this is a trick we are using to animate the content of the collapsible so it looks like it is fading in and out */
    /* * we are doing this because transition does not work with display */
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    /* * here we are going to use the transition on all of the propperty */
    transition: all 0.3s;
}

.collapsible--expanded .collapsible__chevron {
    transform: rotate(0);
}

.collapsible--expanded .collapsible__content {
    /* * since we are using max-height here when we change the height of the content back from 0 it is going to take up all of the height of the current container */
    max-height: 100vh;
    opacity: 1;
}

/* * blocks */

.block {
    --padding-vertical:6rem;
    /* * this is here just in case we decide to change this value in the future this affects the right skewed class */
    padding:var(--padding-vertical) 2rem;
}

.block__header {
    text-align: center;
    margin-bottom: 5rem;
}

.block__heading {
    margin-top: 0;
}

.block--dark {
    background: #000;
    color: #7b858b;
}

.block--dark h1,
.block--dark h2,
.block--dark h3 {
    color: #fff;
}

.block--skewed-right {
    /* * this is going to add 4 rems to what ever the value of the padding is */
    padding-bottom: calc(var(--padding-vertical) + 4rem);
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 90%);
}

.block--skewed-left {
    /* * this is going to add 4 rems to what ever the value of the padding is */
    padding-bottom: calc(var(--padding-vertical) + 4rem);
    clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
}

.container {
    max-width: 1140px;
    margin: 0 auto;
}

/* * navigation bar */

.nav {
    background: #000;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    padding: 0 1rem;
    align-items: center;
}

.nav__list {
    width: 100%;
    margin: 0;
}

.nav__item {
    padding: 0.5rem 2rem;
    border-bottom: 1px solid #222;
}

.nav__item > a {
    color: #d2d0db;
    transition: color 0.3s;
}

.nav__item > a:hover {
    color: #fff;
}

.nav__toggler {
    opacity: 0.5;
    transition: box-shadow .15s;
    cursor: pointer;
}

.nav.collapsible--expanded .nav__toggler {
    opacity: 1;
    box-shadow: 0 0 0 3px #666;
    border-radius: 5px;
}

.nav__brand {
    transform: translateY(5px);
}

@media screen and (min-width: 768px) {
    /* * we are going to hide the toggler  */
    .nav__toggler { 
        display: none;
    }

    .nav__list {
        width: auto;
        display: flex;
        font-size: 1.6rem;
        max-height: 100%;
        opacity: 1;
    }

    .nav__item {
        border: 0;
    }
    
}

/* * hero */

.hero__tagline {
    font-size: 2rem;
    color: #b9c3cf;
    letter-spacing: 1px;
    margin: 2rem 0 5rem;
}

.hero__img {
    width: 100%;
}

@media screen and (min-width: 768px) {
    .hero {
        padding-top: 0;
    }
    
    .hero__content {
        text-align: left;
        align-self: center;
    }
    
}

/* * Domain block */

.block-domain .input--group {
    box-shadow: 0 0 30px 20px #e6ebee;
    border: 0;
    margin: 4rem auto;
    max-width: 670px;
}

.block-domain__prices {
    color: var(--header-color);
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 6rem);
    font-size: 2rem;
    font-weight: 600;
    justify-items: center;
    max-width: 700px;
    margin: 0 auto;
}

@media screen and (min-width:768px) {
    .block-domain__prices {
        /* * the autofit value the grid will try to fit as many columns as needed for all of the items */
        /* * when using the autofit keyword we can not just use the fr unit it will not work */
        /* * this is where the minmax function comes into help, this provides a range so if we have extra space it will be distributed equally */
        grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    }
}

/* * plans block */

.block-plan .grid {
    gap:8rem 4.5rem;
}

.block-plan .card {
    max-width: 500px;
    /* * this is going to align the cards in the center for tablets */
    margin: 0 auto;
}

/* *features block */

.feature {
    gap: 4rem 3rem;
    margin-bottom: 12rem;
}

.feature:first-of-type {
    margin-top: 5rem;
}

.feature__heading {
    margin: 1rem 0;
}

.feature__img {
    width: 100%;
}

/* @media screen and (min-width:768px){ */
    /* * this is how we can make the image and the content in each of the articles switch places if we wanted to go that approach */
    /* .feature:nth-child(even) .feature__content {
        order: 2;
    } */
/* } */


/* * Showcase block  */

.showcase__img > img {
    width: 100%;
}

/* * this was thinking in the right direction but we should try to put this on the .media selector because almost all majority of the time we are stacking media components on each other  */
/* .showcase--block .media {
    margin-bottom: 5rem;
} */

/* * this media query job is to not show the whole image pass the tablet point */
/* * we want to only see a piece of the image  */
/* * we do not want it to be responsive this is how we are going to do that */

@media screen and (min-width:768px){

    .showcase--block .grid {
        grid-template-columns: 50% 50%;
        gap: 0 2rem;
    }

    /* * first we need to get the image to appear its actual size */
    .showcase__img {
        justify-self: end;
    }

    .showcase__img > img {
        width: auto;
        max-width: 700px;
    }

    /* * so here we are going to change the size of the columns of the grid so it isn't responsively reshaping itself */


}

/* * footer */

.footer {
    background: #232323;
}

.footer a {
    color: #777;
    transition: color .3s linear;
}

.footer a:hover {
    color: #fff;
}

.footer__section {
    padding: 2rem;
    border-bottom: 1px solid #393939;
}

.footer__section .list {
    /* * this is going to get rid of the space inbetween the header and the list this is set by default by the browser */
    /* * to find this in the inspection look for margin-block-end */
    margin: 0;
}

.footer__heading {
    font-weight: 600;
}

.footer__list > li {
    margin-bottom: 1.5rem;
}

.footer__brand {
    /* * this is one way to center the content  */
    /* margin: 4rem auto; */
    margin-top: 4rem;
    text-align: center;
}

.footer__brand img {
    /* TODO consider refracting this and applying it to all images */
    width: 100%;
    max-width: 230px;
}

.footer__copyright {
    font-size: 2.1rem;
    color: white;
    opacity: .3;
}

@media screen and (min-width:768px) {
    .footer__sections {
        grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    }

    .footer .collapsible__chevron {
        /* * removing the chevron from the tablet view */
        display: none;
    }
    
    .footer .collapsible__content {
        /* * this is one way to make the content visible  */
        /* display: contents; */
        opacity: 1;
        max-height: 100%;
    }

    .footer__brand {
        /* * this is going to move the section to the front */
        order: -1;
        margin-top: 1rem;
    }

    .footer__copyright {
        font-size: 1.5rem;
    }

    .footer__section {
        border: 0;
    }

    .footer__heading {
        font-size: 1.6rem;
    }

    .footer__list {
        font-size: 1.21rem;
    }
}